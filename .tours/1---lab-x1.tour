{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "#1 - Lab 8-1 Implement Authentication with an External IdP",
  "steps": [
    {
      "title": "Lab Overview",
      "description": "## Lab 8.1 Authenticate with AD FS as an External IdP\n\n🎯 **Objective** Set up AD FS as an external IdP.\n\n🎬 **Scenario** Okta Ice wants to allow customers to be able to authenticate via additional external IdPs. For our proof of concept that doesn't require getting developer keys from social IdPs (e.g., Facebook or Twitter), we'll use AD FS.\n\n⏱️ **Duration** 20 minutes"
    },
    {
      "title": "Review the Partner Organizational Unit in Active Directory",
      "description": "## Review the Partner Organizational Unit in AD\n\nThe Partner OU contains users that are not synced to Okta via Active Directory. You will use these users to test using AD FS as an external IdP integrated through Okta.\n\n1. In your VM, open `Active Directory Users and Computers` by clicking the ![Active Directory Users and Computers](./.tour-resources/adusersicon.png) icon in your Windows toolbar.\n\n2. On the left panel of the **Active Directory Users and Computers** window, select`oktaice.local` > `Partners`\n\nYou should see that the `Partners` organizational unit (group) contains six users. One of these users is Diane Smith. We'll be using that account to test our local AD FS configuration before moving on to configuring AD FS as an external IdP through Okta."
    },
    {
      "title": "Validate your AD FS Configuration",
      "description": "## Validate your AD FS Configuration\n\nIn this section, you confirm that your AD FS can authenticate users from Active Directory.\n\n1. Open Chrome and navigate to https://adfs.oktaice.local/adfs/ls/idpinitiatedsignon\n\n2. Click `Sign in`\n\n3. Sign in with `diane.smith@oktaice.com` as the **username** and `Tra!nme4321` as the **password**.\n\n4. Click `Sign in`\n\n5. Verify that sign in is successful. This verifies that AD FS is correctly configured and running on your machine.\n\n6. Sign out and close your browser."
    },
    {
      "title": "Run the Windows Certificate Export Wizard",
      "description": "## Run the Windows Certificate Export Wizard\n\nAD FS uses a signing certificate to sign its SAML assertions. In the next two steps, you will run the Windows Certificate Export Wizard and download the signing certificate.\n\nIn a future step, we will upload this certificate to Okta. Okta will use the signing certificate during the app initiated sign-on to verify that the SAML assertion is generated by AD FS.\n\n1. Open `AD FS Management` by clicking on the ![AD FS Management](./.tour-resources/adfsmanagementicon.png) From the Windows toolbar.\n2. In the left panel of the **AD FS Management** window, select `AD FS` > `Service` > `Certificates`\n3. In the `Certificates` panel, right-click the certificate under `Token-signing` and select `View Certificate`\n4. Click the `Details` tab.\n5. Click the `Copy to File...` button.\n\nThe **Windows Certificate Export Wizard** is launched."
    },
    {
      "title": "Download the AD FS Signing Certificate",
      "description": "## Download the AD FS Signing Certificate\n1. In the **Windows Certificate Export Wizard** window, continue clicking `Next`, taking the default settings, until you reach the step where the wizard asks you what you would like to name your file.\n\n2. Click the `Browse...` button.\n\n3. Navigate to the `Desktop` folder\n\n4. Enter `adfs.cer` as the **File name** and click `Save`\n\n5. Click `Finish`\n\n6. A dialog box will pop up indicating that the file export was successful. Click `OK` to close this dialog box.\n\n7. Click `OK` in the **Certificate** window to close it.\n\n8. Minimize the **AD FS Management** window, as we will return to it in a subsequent step.\n\n9. Navigate to your Desktop and confirm that the `adfs.cer` file was saved there."
    },
    {
      "title": "Add a New SAML 2.0 Identity Provider (IdP)",
      "description": "## Add a New SAML 2.0 Identity Provider (IdP)\n\nWe'll use our service account to add an AD FS as a SAML 2.0 IdP.\n\n1. Open Chrome and log in to the Okta Admin Dashboard as `oktatraining`\n2. From the Admin menu, go to `Security` > `Identity Providers`\n3. Click `Add Identity Provider`\n4. Select `SAML 2.0 IdP`\n5. Click `Next`"
    },
    {
      "title": "Configure the SAML 2.0 IdP",
      "description": "## Configure the SAML 2.0 IdP\n\n1. Name this configuration `AD FS`\n2. In the `IdP username` field, select `idpuser.subjectNameId`\n3. In the **JIT Settings** section, select `Update attributes for existing users`\n4. Under **Group Assignments**, select `Assign to specific groups`\n5. In the `Specific Groups` field, type and select `Customers`\n6. Scroll down to the **SAML Protocol Settings** section\n7. For `IdP Issuer URI`, enter `https://adfs.oktaice.local/adfs/services/trust`\n8. For `IdP Single Sign-on URL`, enter `https://adfs.oktaice.local/adfs/ls`\n9. For `IdP Signature Certificate`, click `Browse files` and select the `adfs.cer` file you saved to Desktop\n10. Click `Finish`"
    },
    {
      "title": "Configure IdP Routing Rules",
      "description": "## Configure IdP Routing Rules\nWe're going to create a routing rule that tells Okta to use AD FS as our IdP for any user that logs in with an `oktaice.local` email address.\n\n1. Click the `Routing rules` tab\n2. Click `Add Routing Rule`\n3. Name the rule `AD FS Rule`\n4. Next to **User matches** select `Domain list on login` and, in the field that appears beneath, type in `oktaice.local`\n5. In the **Use this identity provider** section, keep `Use specific IdP(s)` selected.\n6. In the **IdPs** section at the bottom, remove `Okta` by clicking the `X` and then type and select `AD FS`\n7. Click `Create rule`"
    },
    {
      "title": "Download the Metadata",
      "description": "## Download the Metadata\n1. Click on the `Identity providers` tab\n\n2. In the table of identity providers, click the arrow next to the `AD FS` entry to expand it.\n\n3. Click `Download metadata` and the `metadata.xml` file will be saved to your `Downloads` folder.\n\n4. **Log out of Okta**"
    },
    {
      "title": "Register Okta as a Relying Party in AD FS",
      "description": "## Register Okta as a Relying Party in AD FS\n\n1. Maximize the ![AD FS Management](./.tour-resources/adfsmanagementicon.png) **AD FS Management** window you minimized in your VM.\n2. In the left panel, select `AD FS` > `Trust Relationships` > `Relying Party Trusts`\n3. In the right menu, click `Add Relying Party Trust`\n4. When the **Add Relying Party Trust Wizard** is launched, click `Start`\n5. In the **Select Data Source** step, select `Import data about the relying party from a file` and click `Browse`\n6. Navigate to the `Downloads` folder and select the `metadata.xml` file you downloaded from Okta, and then click `Next`\n7. In the **Specify Display Name** step, enter `Okta Ice` as display name and click `Next`\n8. Proceed with the default options until the Wizard is completed and click `Close`\n\nWe'll configure the AD FS Claim rule next."
    },
    {
      "title": "Configure an AD FS Claim Rule",
      "description": "## Configure an AD FS Claim Rule\n\nAfter the last step, the **Edit Claim Rules** window should have appeared. The claim rules define what user data will be sent from AD FS to Okta via SAML assertion.\n\n1. In the **Edit Claim Rules** window, click `Add Rule`\n2. Select `Send LDAP Attributes as Claims as claim rule template` and click `Next`\n\n3. **Name** the claim rule `Attributes to Okta`\n4. Set the **Attribute store** to `Active directory`\n5. Under **Mapping of LDAP attributes to outgoing claim types** add these additional attributes:\n\n| **LDAP Attribute** | **Outgoing Claim Type** |\n|:------------------ |:----------------------- |\n| `Given-Name`       | `firstName`             |\n| `Surname`          | `lastName`              |\n| `E-Mail-Addresses` | `email`                 |\n| `E-Mail-Addresses` | `Name ID`               |\n\nFinally, click `Finish` and then click `OK` in the **Edit Claim Rules** window."
    },
    {
      "title": "Create a Relying Party Identifier in AD FS for Okta Ice",
      "description": "## Create a Relying Party Identifier in AD FS for Okta Ice\n\nThe Relying party identifier is used to trigger a login without passing by a select Relying Party form in AD FS.\n\n1. In **AD FS Management**, go to `AD FS` > `Trust Relationships` > `Relying Party Trusts`\n2. Right-click `Okta Ice` and then click `Properties`\n3. Click the `Identifiers` tab.\n4. Enter `OktaIce` as `Relying party identifier` and click `Add`\n   OktaIce will be listed under the Relying party identifier text box.\n\n5. Click `OK`"
    },
    {
      "title": "Test Authentication with AD FS",
      "description": "## Test Authentication with AD FS\n\n1. Click [here to copy the previously configured applications](command:codetour.sendTextToTerminal?[\"mkdir redirect; mkdir embedded; cp ../03-exploring-authentication-protocol-flows/redirect/* redirect; cp ../03-exploring-authentication-protocol-flows/embedded/* embedded\"]).\n\n2. Click [here to launch the web server](command:codetour.sendTextToTerminal?[\"python -m http.server 8080\"]).\n\n3. Navigate to http://localhost:8080\n\n4. Click `Rewards App (Redirect)`\n\n5. Enter `dsmith@oktaice.local` as the **Username**\n\n6. Click `Next`\n\n7. Enter `Tra!nme4321` as the password\n\n8. Click `Verify`\n\nThe user should now be logged in via AD FS as an IdP. This should also create a new Okta-managed user via Just-in-Time (JIT) provisioning with the profile attribute mapping we set up in AD FS.\n\nFinally, click `Close Okta Session`"
    },
    {
      "title": "Verify JIT Provisioning",
      "description": "## Verify JIT Provisioning\n1. Log back in to the Okta Admin Dashboard as `oktatraining`\n2. Click `Directory` > `People`\n3. Search for `Diane Smith` and click on the user\n4. Confirm that Okta displays the message **Profile sourced by SAML 2.0 IdP**.\n5. Click the `Profile` tab.\n6. Confirm that the user profile now contains the user email and name. This confirms that the Just in Time provisioning (JIT) is working."
    },
    {
      "title": "Lab Checkpoint",
      "description": "## ✅ Checkpoint\n\nAt this point, you have Okta integrated with AD FS as Identity Provider using SAML. This integration allows users located under the Partner OU to log into Okta using via AD FS. Okta leverages Just-In-Time (JIT) provisioning to automatically recognize and create users federated via integration with AD FS.\n\n## 🎉 End of Module 8 Labs\n\n**You may close this workspace project, ensuring all changes were saved.**\n"
    }
  ]
}